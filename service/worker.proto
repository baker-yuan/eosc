syntax = "proto3";

option go_package = "github.com/eolinker/eosc/service";
package service;
import "message.proto";
import "traffic.proto";
import "listen.proto";

message WorkerHelloRequest{
  string hello = 1;
}

message WorkerDeleteRequest  {
  string id = 1;
}

message WorkerSetRequest{
  string id = 1;
  string profession = 2;
  string name = 3;
  string driver = 4;
  bytes  body = 5;
}

enum WorkerStatusCode{
  SUCCESS = 0;
  FAIL = 1;
  SKILL = 2;
}


message WorkerResponse{
  WorkerStatusCode status = 1;
  string message = 2;
}

message WorkerLoadArg{
  repeated  PbTraffic traffic = 1;
  ListensMsg listensMsg = 2;
  map<string,string> extenderSetting= 3;
  repeated ProfessionConfig  professions = 4;
  repeated WorkerConfig workers = 5;
}

message ResetRequest{
  repeated ProfessionConfig professions = 2;
  repeated WorkerConfig workers = 3;
}

message StatusRequest{

}
message StatusResponse{

}
message WorkerAddExtender{
  map<string,string>Extenders = 1;
}
message WorkerDelExtender{
  repeated string extenders =1;
}

service WorkerService{
  rpc deleteCheck(WorkerDeleteRequest)returns(WorkerResponse){};
  rpc setCheck(WorkerSetRequest)returns(WorkerResponse){};

  rpc delete(WorkerDeleteRequest)returns(WorkerResponse){};
  rpc set(WorkerSetRequest)returns(WorkerResponse){};

  rpc ping(WorkerHelloRequest)returns(WorkerResponse){};

  rpc reset(ResetRequest) returns(WorkerResponse){};
  rpc status(StatusRequest)returns(StatusResponse){};
  rpc addExtender(WorkerAddExtender)returns(WorkerResponse){}

  rpc delExtenderCheck(WorkerDelExtender)returns(WorkerResponse){}
}
